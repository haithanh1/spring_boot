2024-04-15 22:13:05 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/security']
2024-04-15 22:13:05 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:05 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui.html']
2024-04-15 22:13:05 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/webjars/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:05 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/webjars/**']
2024-04-15 22:13:05 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:05 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-04-15 22:13:05 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:05 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-04-15 22:13:05 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:05 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-15 22:13:05 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:05 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui**']
2024-04-15 22:13:05 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@72557e0d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14b4caba, org.springframework.security.web.context.SecurityContextPersistenceFilter@486480e2, org.springframework.security.web.header.HeaderWriterFilter@43851574, org.springframework.security.web.csrf.CsrfFilter@306f439c, org.springframework.security.web.authentication.logout.LogoutFilter@4ff5711b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1da40ae8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63f609a4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20305c45, org.springframework.security.web.session.SessionManagementFilter@4fec93d0, org.springframework.security.web.access.ExceptionTranslationFilter@3446ab40]
2024-04-15 22:13:06 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-15 22:13:06 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-15 22:13:06 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-15 22:13:06 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-15 22:13:06 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-15 22:13:06 [INFO ] [main] DemoApplication - Started DemoApplication in 5.048 seconds (JVM running for 6.299)
2024-04-15 22:13:09 [INFO ] [http-nio-8080-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-15 22:13:09 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-15 22:13:09 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Completed initialization in 2 ms
2024-04-15 22:13:29 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:13:29 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-15 22:13:29 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-15 22:13:33 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 2964 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-15 22:13:33 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 3 JPA repository interfaces.
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:13:34 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-15 22:13:34 [INFO ] [main] GenericScope - BeanFactory id=a5aed1e8-bdb6-3d64-93d8-1f77f7731b7c
2024-04-15 22:13:35 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-15 22:13:35 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-15 22:13:35 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-15 22:13:35 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-15 22:13:35 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-15 22:13:35 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1349 ms
2024-04-15 22:13:35 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-15 22:13:35 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-15 22:13:35 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 22:13:35 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-15 22:13:35 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-15 22:13:35 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-15 22:13:36 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 22:13:36 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:13:36 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-15 22:13:36 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e4bbda4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-15 22:13:36 [INFO ] [cluster-ClusterId{value='661d44207059166a7b9c98b8', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:206}] to localhost:27017
2024-04-15 22:13:36 [INFO ] [cluster-rtt-ClusterId{value='661d44207059166a7b9c98b8', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:205}] to localhost:27017
2024-04-15 22:13:36 [INFO ] [cluster-ClusterId{value='661d44207059166a7b9c98b8', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17893900}
2024-04-15 22:13:37 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-15 22:13:37 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:37 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-04-15 22:13:37 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='swagger-ui**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:37 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='swagger-ui**']
2024-04-15 22:13:37 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:37 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-04-15 22:13:37 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:37 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs**']
2024-04-15 22:13:37 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:13:37 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-15 22:13:37 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f65a6d7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67726dd1, org.springframework.security.web.context.SecurityContextPersistenceFilter@37ecc472, org.springframework.security.web.header.HeaderWriterFilter@3ef2f84c, org.springframework.security.web.authentication.logout.LogoutFilter@1bb21ec1, com.example.config.JwtAuthenticationFilter@662b199, org.springframework.security.web.session.ConcurrentSessionFilter@81198ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76ac3ad0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49c74506, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45c270f9, org.springframework.security.web.session.SessionManagementFilter@4a571516, org.springframework.security.web.access.ExceptionTranslationFilter@5c519da4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4676fcd9]
2024-04-15 22:13:37 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-15 22:13:37 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-15 22:13:38 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-15 22:13:38 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-15 22:13:38 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-15 22:13:38 [INFO ] [main] DemoApplication - Started DemoApplication in 4.989 seconds (JVM running for 5.975)
2024-04-15 22:13:40 [INFO ] [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-15 22:13:40 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-15 22:13:40 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 1 ms
2024-04-15 22:14:22 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:14:22 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-15 22:14:22 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-15 22:14:27 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 17296 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-15 22:14:27 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 3 JPA repository interfaces.
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:14:27 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 1 MongoDB repository interfaces.
2024-04-15 22:14:28 [INFO ] [main] GenericScope - BeanFactory id=a5aed1e8-bdb6-3d64-93d8-1f77f7731b7c
2024-04-15 22:14:28 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-15 22:14:28 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-15 22:14:28 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-15 22:14:28 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-15 22:14:28 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-15 22:14:28 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1325 ms
2024-04-15 22:14:28 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-15 22:14:28 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-15 22:14:28 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 22:14:28 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-15 22:14:29 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-15 22:14:29 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-15 22:14:29 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 22:14:29 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:14:30 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-15 22:14:30 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5b312863]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-15 22:14:30 [INFO ] [cluster-rtt-ClusterId{value='661d44569417494b070d12dd', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:208}] to localhost:27017
2024-04-15 22:14:30 [INFO ] [cluster-ClusterId{value='661d44569417494b070d12dd', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:207}] to localhost:27017
2024-04-15 22:14:30 [INFO ] [cluster-ClusterId{value='661d44569417494b070d12dd', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18004200}
2024-04-15 22:14:30 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-15 22:14:30 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:30 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-04-15 22:14:30 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='swagger-ui**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:30 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='swagger-ui**']
2024-04-15 22:14:30 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:30 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-04-15 22:14:30 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:30 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs**']
2024-04-15 22:14:30 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:30 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-15 22:14:30 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7aa44fa2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c43c37d, org.springframework.security.web.context.SecurityContextPersistenceFilter@11fb4f69, org.springframework.security.web.header.HeaderWriterFilter@2afe263, org.springframework.security.web.authentication.logout.LogoutFilter@2252dc5d, com.example.config.JwtAuthenticationFilter@428e9be2, org.springframework.security.web.session.ConcurrentSessionFilter@1766b009, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b1ef6a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42e14655, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61c946a0, org.springframework.security.web.session.SessionManagementFilter@834529e, org.springframework.security.web.access.ExceptionTranslationFilter@1314ccc1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1a920154]
2024-04-15 22:14:31 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-15 22:14:31 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-15 22:14:31 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-15 22:14:31 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-15 22:14:31 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-15 22:14:31 [INFO ] [main] DemoApplication - Started DemoApplication in 4.94 seconds (JVM running for 5.968)
2024-04-15 22:14:34 [INFO ] [http-nio-8080-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-15 22:14:34 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-15 22:14:34 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Completed initialization in 1 ms
2024-04-15 22:14:48 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:14:48 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-15 22:14:48 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-15 22:14:53 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 8496 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-15 22:14:53 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 3 JPA repository interfaces.
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:14:53 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-15 22:14:54 [INFO ] [main] GenericScope - BeanFactory id=a5aed1e8-bdb6-3d64-93d8-1f77f7731b7c
2024-04-15 22:14:54 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-15 22:14:54 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-15 22:14:54 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-15 22:14:54 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-15 22:14:54 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-15 22:14:54 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1332 ms
2024-04-15 22:14:54 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-15 22:14:54 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-15 22:14:54 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 22:14:54 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-15 22:14:55 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-15 22:14:55 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-15 22:14:55 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 22:14:55 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:14:56 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-15 22:14:56 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2eed6331]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-15 22:14:56 [INFO ] [cluster-ClusterId{value='661d4470f3fe234d3376aa0f', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:209}] to localhost:27017
2024-04-15 22:14:56 [INFO ] [cluster-rtt-ClusterId{value='661d4470f3fe234d3376aa0f', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:210}] to localhost:27017
2024-04-15 22:14:56 [INFO ] [cluster-ClusterId{value='661d4470f3fe234d3376aa0f', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17316500}
2024-04-15 22:14:56 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-15 22:14:56 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:56 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-04-15 22:14:56 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='swagger-ui**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:56 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='swagger-ui**']
2024-04-15 22:14:56 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:56 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-04-15 22:14:56 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:56 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs**']
2024-04-15 22:14:56 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-15 22:14:56 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-15 22:14:56 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28f5a003, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3220ffb, org.springframework.security.web.context.SecurityContextPersistenceFilter@7719b257, org.springframework.security.web.header.HeaderWriterFilter@6d13cd6d, org.springframework.security.web.authentication.logout.LogoutFilter@77e2a5d3, com.example.config.JwtAuthenticationFilter@18ed9480, org.springframework.security.web.session.ConcurrentSessionFilter@2cea41ab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@681302ad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c12f0f4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53791a39, org.springframework.security.web.session.SessionManagementFilter@344eaf7e, org.springframework.security.web.access.ExceptionTranslationFilter@24032706, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c43c37d]
2024-04-15 22:14:57 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-15 22:14:57 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-15 22:14:57 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-15 22:14:57 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-15 22:14:57 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-15 22:14:57 [INFO ] [main] DemoApplication - Started DemoApplication in 5.078 seconds (JVM running for 5.994)
2024-04-15 22:14:59 [INFO ] [http-nio-8080-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-15 22:14:59 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-15 22:14:59 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Completed initialization in 1 ms
2024-04-15 22:15:06 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:15:06 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-15 22:15:06 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-15 22:15:11 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 15756 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-15 22:15:11 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 3 JPA repository interfaces.
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:15:11 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-15 22:15:12 [INFO ] [main] GenericScope - BeanFactory id=a5aed1e8-bdb6-3d64-93d8-1f77f7731b7c
2024-04-15 22:15:12 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-15 22:15:12 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-15 22:15:12 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-15 22:15:12 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-15 22:15:12 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-15 22:15:12 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1333 ms
2024-04-15 22:15:12 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-15 22:15:12 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-15 22:15:12 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 22:15:12 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-15 22:15:13 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-15 22:15:13 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-15 22:15:13 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 22:15:13 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:15:14 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-15 22:15:14 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@24be6e34]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-15 22:15:14 [INFO ] [cluster-rtt-ClusterId{value='661d448264b9916eb9d707b4', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:212}] to localhost:27017
2024-04-15 22:15:14 [INFO ] [cluster-ClusterId{value='661d448264b9916eb9d707b4', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:211}] to localhost:27017
2024-04-15 22:15:14 [INFO ] [cluster-ClusterId{value='661d448264b9916eb9d707b4', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19490000}
2024-04-15 22:15:14 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-15 22:15:14 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@57629340, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5292d417, org.springframework.security.web.context.SecurityContextPersistenceFilter@681302ad, org.springframework.security.web.header.HeaderWriterFilter@72d2470, org.springframework.security.web.authentication.logout.LogoutFilter@521e34d4, com.example.config.JwtAuthenticationFilter@428e9be2, org.springframework.security.web.session.ConcurrentSessionFilter@486480e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63f609a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f5aac08, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@415c5469, org.springframework.security.web.session.SessionManagementFilter@f8b6743, org.springframework.security.web.access.ExceptionTranslationFilter@6d13cd6d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@227e4ea8]
2024-04-15 22:15:15 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-15 22:15:15 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-15 22:15:15 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-15 22:15:15 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-15 22:15:15 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-15 22:15:15 [INFO ] [main] DemoApplication - Started DemoApplication in 4.944 seconds (JVM running for 6.036)
2024-04-15 22:15:17 [INFO ] [http-nio-8080-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-15 22:15:17 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-15 22:15:17 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Completed initialization in 1 ms
2024-04-15 22:15:34 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:15:34 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-15 22:15:34 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-15 22:15:38 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 12684 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-15 22:15:38 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 3 JPA repository interfaces.
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:15:38 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-15 22:15:39 [INFO ] [main] GenericScope - BeanFactory id=a5aed1e8-bdb6-3d64-93d8-1f77f7731b7c
2024-04-15 22:15:39 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-15 22:15:39 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-15 22:15:39 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-15 22:15:39 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-15 22:15:39 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-15 22:15:39 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1335 ms
2024-04-15 22:15:39 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-15 22:15:39 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-15 22:15:39 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 22:15:39 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-15 22:15:40 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-15 22:15:40 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-15 22:15:40 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 22:15:40 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:15:41 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-15 22:15:41 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e4bbda4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-15 22:15:41 [INFO ] [cluster-ClusterId{value='661d449d43d2f67e0fb1a41f', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:214}] to localhost:27017
2024-04-15 22:15:41 [INFO ] [cluster-rtt-ClusterId{value='661d449d43d2f67e0fb1a41f', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:213}] to localhost:27017
2024-04-15 22:15:41 [INFO ] [cluster-ClusterId{value='661d449d43d2f67e0fb1a41f', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16940300}
2024-04-15 22:15:41 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-15 22:15:41 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@66d9c846, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b6d9650, org.springframework.security.web.context.SecurityContextPersistenceFilter@149bdb4e, org.springframework.security.web.header.HeaderWriterFilter@72d2470, org.springframework.security.web.authentication.logout.LogoutFilter@6e157f48, com.example.config.JwtAuthenticationFilter@662b199, org.springframework.security.web.session.ConcurrentSessionFilter@594793d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3747877, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39153b05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2287bbd1, org.springframework.security.web.session.SessionManagementFilter@4414ee28, org.springframework.security.web.access.ExceptionTranslationFilter@6d13cd6d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5aef36a9]
2024-04-15 22:15:42 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-15 22:15:42 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-15 22:15:42 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-15 22:15:42 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-15 22:15:42 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-15 22:15:42 [INFO ] [main] DemoApplication - Started DemoApplication in 4.857 seconds (JVM running for 5.797)
2024-04-15 22:15:47 [INFO ] [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-15 22:15:47 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-15 22:15:47 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 1 ms
2024-04-15 22:16:41 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:16:41 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-15 22:16:41 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-15 22:16:46 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 7460 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-15 22:16:46 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 3 JPA repository interfaces.
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:16:46 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-15 22:16:47 [INFO ] [main] GenericScope - BeanFactory id=a5aed1e8-bdb6-3d64-93d8-1f77f7731b7c
2024-04-15 22:16:47 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-15 22:16:47 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-15 22:16:47 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-15 22:16:47 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-15 22:16:47 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-15 22:16:47 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1376 ms
2024-04-15 22:16:47 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-15 22:16:47 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-15 22:16:47 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 22:16:47 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-15 22:16:48 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-15 22:16:48 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-15 22:16:48 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 22:16:48 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:16:48 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-15 22:16:49 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e4bbda4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-15 22:16:49 [INFO ] [cluster-ClusterId{value='661d44e0b3c38b0f48ca6555', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:215}] to localhost:27017
2024-04-15 22:16:49 [INFO ] [cluster-rtt-ClusterId{value='661d44e0b3c38b0f48ca6555', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:216}] to localhost:27017
2024-04-15 22:16:49 [INFO ] [cluster-ClusterId{value='661d44e0b3c38b0f48ca6555', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17098100}
2024-04-15 22:16:49 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-15 22:16:49 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2b6d9650, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2287bbd1, org.springframework.security.web.context.SecurityContextPersistenceFilter@149bdb4e, org.springframework.security.web.header.HeaderWriterFilter@72d2470, org.springframework.security.web.authentication.logout.LogoutFilter@6e157f48, com.example.config.JwtAuthenticationFilter@662b199, org.springframework.security.web.session.ConcurrentSessionFilter@594793d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3747877, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39153b05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41a6cd9e, org.springframework.security.web.session.SessionManagementFilter@4414ee28, org.springframework.security.web.access.ExceptionTranslationFilter@6d13cd6d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19544627]
2024-04-15 22:16:50 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-15 22:16:50 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-15 22:16:50 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-15 22:16:50 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-15 22:16:50 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-15 22:16:50 [INFO ] [main] DemoApplication - Started DemoApplication in 5.0 seconds (JVM running for 6.098)
2024-04-15 22:16:51 [INFO ] [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-15 22:16:51 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-15 22:16:51 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 1 ms
2024-04-15 22:18:47 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:18:47 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-15 22:18:47 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-15 22:18:51 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 8140 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-15 22:18:51 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 3 JPA repository interfaces.
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:18:52 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-15 22:18:52 [INFO ] [main] GenericScope - BeanFactory id=a5aed1e8-bdb6-3d64-93d8-1f77f7731b7c
2024-04-15 22:18:53 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-15 22:18:53 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-15 22:18:53 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-15 22:18:53 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-15 22:18:53 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-15 22:18:53 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1325 ms
2024-04-15 22:18:53 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-15 22:18:53 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-15 22:18:53 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 22:18:53 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-15 22:18:53 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-15 22:18:53 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-15 22:18:54 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 22:18:54 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:18:54 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-15 22:18:54 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7e4bbda4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-15 22:18:54 [INFO ] [cluster-ClusterId{value='661d455edb6f0649fad3117e', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:218}] to localhost:27017
2024-04-15 22:18:54 [INFO ] [cluster-rtt-ClusterId{value='661d455edb6f0649fad3117e', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:217}] to localhost:27017
2024-04-15 22:18:54 [INFO ] [cluster-ClusterId{value='661d455edb6f0649fad3117e', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21275700}
2024-04-15 22:18:55 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-15 22:18:55 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2b6d9650, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2287bbd1, org.springframework.security.web.context.SecurityContextPersistenceFilter@149bdb4e, org.springframework.security.web.header.HeaderWriterFilter@72d2470, org.springframework.security.web.authentication.logout.LogoutFilter@6e157f48, com.example.config.JwtAuthenticationFilter@662b199, org.springframework.security.web.session.ConcurrentSessionFilter@594793d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3747877, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39153b05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41a6cd9e, org.springframework.security.web.session.SessionManagementFilter@4414ee28, org.springframework.security.web.access.ExceptionTranslationFilter@6d13cd6d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19544627]
2024-04-15 22:18:56 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-15 22:18:56 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-15 22:18:56 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-15 22:18:56 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-15 22:18:56 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-15 22:18:56 [INFO ] [main] DemoApplication - Started DemoApplication in 4.992 seconds (JVM running for 6.017)
2024-04-15 22:19:05 [INFO ] [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-15 22:19:05 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-15 22:19:05 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 1 ms
2024-04-15 22:19:05 [ERROR] [http-nio-8080-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Unable to handle the Spring Security Exception because the response is already committed.] with root cause
org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:73) ~[spring-security-core-5.7.7.jar:5.7.7]
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.attemptAuthorization(AbstractSecurityInterceptor.java:239) ~[spring-security-core-5.7.7.jar:5.7.7]
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:208) ~[spring-security-core-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:113) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:147) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:125) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at com.example.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at java.lang.Thread.run(Thread.java:834) ~[?:?]
2024-04-15 22:42:38 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:42:38 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-15 22:42:38 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-15 22:42:42 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 4936 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-15 22:42:42 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 3 JPA repository interfaces.
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-15 22:42:43 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-15 22:42:44 [INFO ] [main] GenericScope - BeanFactory id=a5aed1e8-bdb6-3d64-93d8-1f77f7731b7c
2024-04-15 22:42:44 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-15 22:42:44 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-15 22:42:44 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-15 22:42:44 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-15 22:42:44 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-15 22:42:44 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1518 ms
2024-04-15 22:42:44 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-15 22:42:44 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-15 22:42:44 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 22:42:44 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-15 22:42:45 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-15 22:42:45 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-15 22:42:45 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 22:42:45 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-15 22:42:46 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-15 22:42:46 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2eed6331]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}

2024-04-14 22:37:01 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:37:01 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-14 22:37:01 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-14 22:37:06 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 19048 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-14 22:37:06 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 3 JPA repository interfaces.
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:06 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-14 22:37:07 [INFO ] [main] GenericScope - BeanFactory id=13d10c3d-c3f0-37bd-bf1a-3d51cd8c326e
2024-04-14 22:37:07 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-14 22:37:07 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-14 22:37:07 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-14 22:37:07 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-14 22:37:07 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-14 22:37:07 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1329 ms
2024-04-14 22:37:07 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-14 22:37:07 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-14 22:37:07 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-14 22:37:07 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-14 22:37:08 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-14 22:37:08 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-14 22:37:08 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-14 22:37:08 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:37:08 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-14 22:37:09 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38dc1c50]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-14 22:37:09 [INFO ] [cluster-rtt-ClusterId{value='661bf825d3a11f2008759ece', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:114}] to localhost:27017
2024-04-14 22:37:09 [INFO ] [cluster-ClusterId{value='661bf825d3a11f2008759ece', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:113}] to localhost:27017
2024-04-14 22:37:09 [INFO ] [cluster-ClusterId{value='661bf825d3a11f2008759ece', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19147900}
2024-04-14 22:37:09 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-14 22:37:09 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v2/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:09 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v2/api-docs']
2024-04-14 22:37:09 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/ui']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:09 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/ui']
2024-04-14 22:37:09 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:09 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-04-14 22:37:09 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/security']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:09 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/security']
2024-04-14 22:37:09 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:09 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui.html']
2024-04-14 22:37:09 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:09 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-14 22:37:09 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/webjars/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:09 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/webjars/**']
2024-04-14 22:37:09 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4a3e1b5d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@587df3e4, org.springframework.security.web.context.SecurityContextPersistenceFilter@323b5264, org.springframework.security.web.header.HeaderWriterFilter@619944a7, org.springframework.security.web.authentication.logout.LogoutFilter@293dd4b3, com.example.config.JwtAuthenticationFilter@10b7b5f0, org.springframework.security.web.session.ConcurrentSessionFilter@1d306d27, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@386b4f7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@571360b2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64abb917, org.springframework.security.web.session.SessionManagementFilter@5dfaa2f0, org.springframework.security.web.access.ExceptionTranslationFilter@373c367, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6da14f7f]
2024-04-14 22:37:10 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-14 22:37:10 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-14 22:37:10 [INFO ] [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-14 22:37:10 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-14 22:37:10 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 1 ms
2024-04-14 22:37:10 [ERROR] [http-nio-8080-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.71.jar:4.0.FR]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:561) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670) ~[tomcat-embed-core-9.0.71.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779) ~[tomcat-embed-core-9.0.71.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at com.example.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at java.lang.Thread.run(Thread.java:834) ~[?:?]
2024-04-14 22:37:10 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-14 22:37:10 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-14 22:37:10 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-14 22:37:10 [INFO ] [main] DemoApplication - Started DemoApplication in 4.96 seconds (JVM running for 5.856)
2024-04-14 22:37:31 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:37:31 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-14 22:37:31 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-14 22:37:35 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 15764 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-14 22:37:35 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 3 JPA repository interfaces.
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:36 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-14 22:37:36 [INFO ] [main] GenericScope - BeanFactory id=13d10c3d-c3f0-37bd-bf1a-3d51cd8c326e
2024-04-14 22:37:37 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-14 22:37:37 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-14 22:37:37 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-14 22:37:37 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-14 22:37:37 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-14 22:37:37 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1312 ms
2024-04-14 22:37:37 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-14 22:37:37 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-14 22:37:37 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-14 22:37:37 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-14 22:37:37 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-14 22:37:37 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-14 22:37:38 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-14 22:37:38 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:37:38 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-14 22:37:38 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@528ef230]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-14 22:37:38 [INFO ] [cluster-rtt-ClusterId{value='661bf84249b8ec6ecf0b744f', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:116}] to localhost:27017
2024-04-14 22:37:38 [INFO ] [cluster-ClusterId{value='661bf84249b8ec6ecf0b744f', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:115}] to localhost:27017
2024-04-14 22:37:38 [INFO ] [cluster-ClusterId{value='661bf84249b8ec6ecf0b744f', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18797600}
2024-04-14 22:37:39 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-14 22:37:39 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v2/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:39 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v2/api-docs']
2024-04-14 22:37:39 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/ui']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:39 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/ui']
2024-04-14 22:37:39 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:39 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-04-14 22:37:39 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/security']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:39 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/security']
2024-04-14 22:37:39 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:39 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui.html']
2024-04-14 22:37:39 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:39 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-14 22:37:39 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/webjars/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:37:39 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/webjars/**']
2024-04-14 22:37:39 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@119de68f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@529cd3ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@35ec3604, org.springframework.security.web.header.HeaderWriterFilter@3b303b78, org.springframework.security.web.authentication.logout.LogoutFilter@300b839c, com.example.config.JwtAuthenticationFilter@2df24f19, org.springframework.security.web.session.ConcurrentSessionFilter@2453cbb7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@466f7259, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@673a702a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c541b00, org.springframework.security.web.session.SessionManagementFilter@35bfa7be, org.springframework.security.web.access.ExceptionTranslationFilter@4548bfc7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f1b006b]
2024-04-14 22:37:39 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-14 22:37:39 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-14 22:37:40 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-14 22:37:40 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-14 22:37:40 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-14 22:37:40 [INFO ] [main] DemoApplication - Started DemoApplication in 4.781 seconds (JVM running for 5.632)
2024-04-14 22:37:41 [INFO ] [http-nio-8080-exec-4] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-14 22:37:41 [INFO ] [http-nio-8080-exec-4] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-14 22:37:41 [INFO ] [http-nio-8080-exec-4] DispatcherServlet - Completed initialization in 2 ms
2024-04-14 22:37:42 [ERROR] [http-nio-8080-exec-4] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot call sendError() after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.71.jar:4.0.FR]
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:561) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670) ~[tomcat-embed-core-9.0.71.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.25.jar:5.3.25]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779) ~[tomcat-embed-core-9.0.71.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at com.example.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:56) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.25.jar:5.3.25]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.25.jar:5.3.25]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.71.jar:9.0.71]
	at java.lang.Thread.run(Thread.java:834) ~[?:?]
2024-04-14 22:37:53 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:37:53 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-14 22:37:53 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-14 22:37:58 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 3692 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-14 22:37:58 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 3 JPA repository interfaces.
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:37:58 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 1 MongoDB repository interfaces.
2024-04-14 22:37:59 [INFO ] [main] GenericScope - BeanFactory id=13d10c3d-c3f0-37bd-bf1a-3d51cd8c326e
2024-04-14 22:37:59 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-14 22:37:59 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-14 22:37:59 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-14 22:37:59 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-14 22:37:59 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-14 22:37:59 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1331 ms
2024-04-14 22:37:59 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-14 22:37:59 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-14 22:37:59 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-14 22:37:59 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-14 22:38:00 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-14 22:38:00 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-14 22:38:00 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-14 22:38:00 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:38:01 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-14 22:38:01 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3ca564aa]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-14 22:38:01 [INFO ] [cluster-ClusterId{value='661bf859894e4c6b7d731016', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:117}] to localhost:27017
2024-04-14 22:38:01 [INFO ] [cluster-rtt-ClusterId{value='661bf859894e4c6b7d731016', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:118}] to localhost:27017
2024-04-14 22:38:01 [INFO ] [cluster-ClusterId{value='661bf859894e4c6b7d731016', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18597900}
2024-04-14 22:38:01 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-14 22:38:01 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v2/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:01 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v2/api-docs']
2024-04-14 22:38:01 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/ui']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:01 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/ui']
2024-04-14 22:38:01 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:01 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-04-14 22:38:01 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/security']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:01 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/security']
2024-04-14 22:38:01 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:01 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui.html']
2024-04-14 22:38:01 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:01 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-14 22:38:01 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/webjars/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:01 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/webjars/**']
2024-04-14 22:38:01 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4c541b00, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f26bd62, org.springframework.security.web.context.SecurityContextPersistenceFilter@466f7259, org.springframework.security.web.header.HeaderWriterFilter@68e8bbab, org.springframework.security.web.authentication.logout.LogoutFilter@33acec5e, com.example.config.JwtAuthenticationFilter@d62feaf, org.springframework.security.web.session.ConcurrentSessionFilter@a89dec0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47c06b1a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e7c66b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61f18997, org.springframework.security.web.session.SessionManagementFilter@41bd8ec9, org.springframework.security.web.access.ExceptionTranslationFilter@3b303b78, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1131fcfd]
2024-04-14 22:38:02 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-14 22:38:02 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-14 22:38:02 [INFO ] [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-14 22:38:02 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-14 22:38:02 [INFO ] [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 1 ms
2024-04-14 22:38:02 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-14 22:38:02 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-14 22:38:02 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-14 22:38:02 [INFO ] [main] DemoApplication - Started DemoApplication in 4.946 seconds (JVM running for 5.989)
2024-04-14 22:38:25 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:38:25 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-14 22:38:25 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-14 22:38:29 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 9592 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-14 22:38:29 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-14 22:38:29 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:38:29 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-14 22:38:29 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-14 22:38:30 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 3 JPA repository interfaces.
2024-04-14 22:38:30 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:38:30 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-14 22:38:30 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:38:30 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:38:30 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:38:30 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-14 22:38:30 [INFO ] [main] GenericScope - BeanFactory id=13d10c3d-c3f0-37bd-bf1a-3d51cd8c326e
2024-04-14 22:38:30 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-14 22:38:30 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-14 22:38:30 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-14 22:38:30 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-14 22:38:30 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-14 22:38:30 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1280 ms
2024-04-14 22:38:30 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-14 22:38:30 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-14 22:38:30 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-14 22:38:31 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-14 22:38:31 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-14 22:38:31 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-14 22:38:31 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-14 22:38:31 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:38:32 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-14 22:38:32 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2c28654e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-14 22:38:32 [INFO ] [cluster-ClusterId{value='661bf878c353d25c77155ee7', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:119}] to localhost:27017
2024-04-14 22:38:32 [INFO ] [cluster-rtt-ClusterId{value='661bf878c353d25c77155ee7', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:120}] to localhost:27017
2024-04-14 22:38:32 [INFO ] [cluster-ClusterId{value='661bf878c353d25c77155ee7', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17633400}
2024-04-14 22:38:32 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-14 22:38:32 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v2/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:32 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v2/api-docs']
2024-04-14 22:38:32 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/ui']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:32 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/ui']
2024-04-14 22:38:32 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:32 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-04-14 22:38:32 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/security']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:32 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/security']
2024-04-14 22:38:32 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:32 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui.html']
2024-04-14 22:38:32 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:32 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-14 22:38:32 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/webjars/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:38:32 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/webjars/**']
2024-04-14 22:38:32 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@529cd3ba, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c541b00, org.springframework.security.web.context.SecurityContextPersistenceFilter@466f7259, org.springframework.security.web.header.HeaderWriterFilter@68e8bbab, org.springframework.security.web.authentication.logout.LogoutFilter@33acec5e, com.example.config.JwtAuthenticationFilter@294ab038, org.springframework.security.web.session.ConcurrentSessionFilter@a89dec0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47c06b1a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e7c66b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f26bd62, org.springframework.security.web.session.SessionManagementFilter@41bd8ec9, org.springframework.security.web.access.ExceptionTranslationFilter@3b303b78, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c2dfde3]
2024-04-14 22:38:33 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-14 22:38:33 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-14 22:38:33 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-14 22:38:33 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-14 22:38:33 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-14 22:38:33 [INFO ] [main] DemoApplication - Started DemoApplication in 4.741 seconds (JVM running for 5.794)
2024-04-14 22:38:37 [INFO ] [http-nio-8080-exec-3] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-14 22:38:37 [INFO ] [http-nio-8080-exec-3] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-14 22:38:37 [INFO ] [http-nio-8080-exec-3] DispatcherServlet - Completed initialization in 1 ms
2024-04-14 22:39:41 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:39:41 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-14 22:39:41 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-14 22:39:45 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 14760 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-14 22:39:45 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 3 JPA repository interfaces.
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:39:46 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-14 22:39:46 [INFO ] [main] GenericScope - BeanFactory id=13d10c3d-c3f0-37bd-bf1a-3d51cd8c326e
2024-04-14 22:39:46 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-14 22:39:46 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-14 22:39:46 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-14 22:39:46 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-14 22:39:46 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-14 22:39:46 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1320 ms
2024-04-14 22:39:47 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-14 22:39:47 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-14 22:39:47 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-14 22:39:47 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-14 22:39:47 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-14 22:39:47 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-14 22:39:48 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-14 22:39:48 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:39:48 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-14 22:39:48 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5b5e45bc]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-14 22:39:48 [INFO ] [cluster-rtt-ClusterId{value='661bf8c4b347380ea8d94b38', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:121}] to localhost:27017
2024-04-14 22:39:48 [INFO ] [cluster-ClusterId{value='661bf8c4b347380ea8d94b38', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:122}] to localhost:27017
2024-04-14 22:39:48 [INFO ] [cluster-ClusterId{value='661bf8c4b347380ea8d94b38', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17736800}
2024-04-14 22:39:49 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-14 22:39:49 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v2/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:39:49 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v2/api-docs']
2024-04-14 22:39:49 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/ui']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:39:49 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/ui']
2024-04-14 22:39:49 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:39:49 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-04-14 22:39:49 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/security']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:39:49 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/security']
2024-04-14 22:39:49 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:39:49 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui.html']
2024-04-14 22:39:49 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:39:49 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-14 22:39:49 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/webjars/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:39:49 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/webjars/**']
2024-04-14 22:39:49 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6fa48ee4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a422390, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b303b78, org.springframework.security.web.header.HeaderWriterFilter@50e336d9, org.springframework.security.web.authentication.logout.LogoutFilter@2453cbb7, com.example.config.JwtAuthenticationFilter@5bfeb9ba, org.springframework.security.web.session.ConcurrentSessionFilter@57e9cd2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@68e8bbab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29f58b44, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53c39950, org.springframework.security.web.session.SessionManagementFilter@238cac6, org.springframework.security.web.access.ExceptionTranslationFilter@5ea50a98, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70a984c5]
2024-04-14 22:39:49 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-14 22:39:49 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-14 22:39:49 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-14 22:39:49 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-14 22:39:49 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-14 22:39:49 [INFO ] [main] DemoApplication - Started DemoApplication in 4.835 seconds (JVM running for 5.885)
2024-04-14 22:39:50 [INFO ] [http-nio-8080-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-14 22:39:50 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-14 22:39:50 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Completed initialization in 1 ms
2024-04-14 22:40:02 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:40:02 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-14 22:40:02 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-14 22:40:06 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 19236 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-14 22:40:06 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 3 JPA repository interfaces.
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:40:07 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-14 22:40:07 [INFO ] [main] GenericScope - BeanFactory id=13d10c3d-c3f0-37bd-bf1a-3d51cd8c326e
2024-04-14 22:40:08 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-14 22:40:08 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-14 22:40:08 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-14 22:40:08 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-14 22:40:08 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-14 22:40:08 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1297 ms
2024-04-14 22:40:08 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-14 22:40:08 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-14 22:40:08 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-14 22:40:08 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-14 22:40:08 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-14 22:40:08 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-14 22:40:09 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-14 22:40:09 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:40:09 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-14 22:40:09 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38dc1c50]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-14 22:40:09 [INFO ] [cluster-ClusterId{value='661bf8d9f204f027c6294eae', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:124}] to localhost:27017
2024-04-14 22:40:09 [INFO ] [cluster-rtt-ClusterId{value='661bf8d9f204f027c6294eae', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:123}] to localhost:27017
2024-04-14 22:40:09 [INFO ] [cluster-ClusterId{value='661bf8d9f204f027c6294eae', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19188100}
2024-04-14 22:40:10 [INFO ] [main] PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2024-04-14 22:40:10 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v2/api-docs']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:40:10 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/v2/api-docs']
2024-04-14 22:40:10 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/ui']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:40:10 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/ui']
2024-04-14 22:40:10 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:40:10 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-04-14 22:40:10 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/configuration/security']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:40:10 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/configuration/security']
2024-04-14 22:40:10 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:40:10 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui.html']
2024-04-14 22:40:10 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:40:10 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/']
2024-04-14 22:40:10 [WARN ] [main] WebSecurity - You are asking Spring Security to ignore Ant [pattern='/webjars/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-04-14 22:40:10 [INFO ] [main] DefaultSecurityFilterChain - Will not secure Ant [pattern='/webjars/**']
2024-04-14 22:40:10 [INFO ] [main] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2c2dfde3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1131fcfd, org.springframework.security.web.context.SecurityContextPersistenceFilter@571360b2, org.springframework.security.web.header.HeaderWriterFilter@4548bfc7, org.springframework.security.web.authentication.logout.LogoutFilter@6add8aac, com.example.config.JwtAuthenticationFilter@175c26ff, org.springframework.security.web.session.ConcurrentSessionFilter@386b4f7e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35ec3604, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@e38b953, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46d2be66, org.springframework.security.web.session.SessionManagementFilter@48682f91, org.springframework.security.web.access.ExceptionTranslationFilter@50e7d8ba, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@68596992]
2024-04-14 22:40:10 [INFO ] [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-04-14 22:40:10 [INFO ] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-04-14 22:40:10 [INFO ] [main] DocumentationPluginsBootstrapper - Context refreshed
2024-04-14 22:40:11 [INFO ] [main] DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2024-04-14 22:40:11 [INFO ] [main] ApiListingReferenceScanner - Scanning for api listing references
2024-04-14 22:40:11 [INFO ] [main] DemoApplication - Started DemoApplication in 4.849 seconds (JVM running for 5.915)
2024-04-14 22:40:11 [INFO ] [http-nio-8080-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-14 22:40:11 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-14 22:40:11 [INFO ] [http-nio-8080-exec-2] DispatcherServlet - Completed initialization in 1 ms
2024-04-14 22:40:44 [INFO ] [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:40:44 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-04-14 22:40:44 [INFO ] [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
2024-04-14 22:40:48 [INFO ] [main] DemoApplication - Starting DemoApplication using Java 11.0.17 on DESKTOP-8RGGIEH with PID 14952 (D:\spring_boot\demo\target\classes started by ADMIN in D:\spring_boot\demo)
2024-04-14 22:40:48 [INFO ] [main] DemoApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.repo.DemoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 3 JPA repository interfaces.
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.AddressRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StaffRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.repo.StoreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-04-14 22:40:49 [INFO ] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interfaces.
2024-04-14 22:40:49 [INFO ] [main] GenericScope - BeanFactory id=13d10c3d-c3f0-37bd-bf1a-3d51cd8c326e
2024-04-14 22:40:49 [INFO ] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-04-14 22:40:49 [INFO ] [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-04-14 22:40:49 [INFO ] [main] StandardService - Starting service [Tomcat]
2024-04-14 22:40:49 [INFO ] [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.71]
2024-04-14 22:40:49 [INFO ] [main] [/] - Initializing Spring embedded WebApplicationContext
2024-04-14 22:40:49 [INFO ] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1305 ms
2024-04-14 22:40:50 [INFO ] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-14 22:40:50 [INFO ] [main] Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2024-04-14 22:40:50 [INFO ] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-14 22:40:50 [INFO ] [main] HikariDataSource - HikariPool-1 - Starting...
2024-04-14 22:40:50 [INFO ] [main] HikariDataSource - HikariPool-1 - Start completed.
2024-04-14 22:40:50 [INFO ] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-04-14 22:40:51 [INFO ] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-14 22:40:51 [INFO ] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-14 22:40:51 [WARN ] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-14 22:40:51 [INFO ] [main] client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/11.0.17+10-LTS-269"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5f3fafca]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-04-14 22:40:51 [INFO ] [cluster-rtt-ClusterId{value='661bf9034e558009b8883d37', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:2, serverValue:125}] to localhost:27017
2024-04-14 22:40:51 [INFO ] [cluster-ClusterId{value='661bf9034e558009b8883d37', description='null'}-localhost:27017] connection - Opened connection [connectionId{localValue:1, serverValue:126}] to localhost:27017
2024-04-14 22:40:51 [INFO ] [cluster-ClusterId{value='661bf9034e558009b8883d37', description='null'}-localhost:27017] cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18057600}
